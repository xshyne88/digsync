defmodule Digsync.Repo.Migrations.AddGroupMembershipsConstraints do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create unique_index(:groups, [:id], name: "groups_uniq_id_index")

    create unique_index(:groups, [:name], name: "groups_unique_group_name_index")

    create table(:group_memberships, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :group_type, :text

      add :group_id,
          references(:groups,
            column: :id,
            name: "group_memberships_group_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :member_id,
          references(:users,
            column: :id,
            name: "group_memberships_member_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false
    end
  end

  def down do
    drop constraint(:group_memberships, "group_memberships_group_id_fkey")

    drop constraint(:group_memberships, "group_memberships_member_id_fkey")

    drop table(:group_memberships)

    drop_if_exists unique_index(:groups, [:name], name: "groups_unique_group_name_index")

    drop_if_exists unique_index(:groups, [:id], name: "groups_uniq_id_index")
  end
end
